[
  {
    "objectID": "Untitled.html",
    "href": "Untitled.html",
    "title": "Exercise 21 and 22",
    "section": "",
    "text": "library(dataRetrieval)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.2\n✔ recipes      1.1.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(lubridate)\nlibrary(tsibble)\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:zoo':\n\n    index\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\nlibrary(feasts)\n\nLoading required package: fabletools\n\nAttaching package: 'fabletools'\n\nThe following object is masked from 'package:yardstick':\n\n    accuracy\n\nThe following object is masked from 'package:parsnip':\n\n    null_model\n\nThe following objects are masked from 'package:infer':\n\n    generate, hypothesize\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Example: Cache la Poudre River at Mouth (USGS site 06752260)\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",    # Download data from USGS for site 06752260\n                          parameterCd = \"00060\",      # Parameter code 00060 = discharge in cfs)\n                          startDate = \"2013-01-01\",   # Set the start date\n                          endDate = \"2023-12-31\") |&gt;  # Set the end date\n  renameNWISColumns() |&gt;                              # Rename columns to standard names (e.g., \"Flow\", \"Date\")\n  mutate(Date = yearmonth(Date)) |&gt;                   # Convert daily Date values into a year-month format (e.g., \"2023 Jan\")\n  group_by(Date) |&gt;                                   # Group the data by the new monthly Date\n  summarise(Flow = mean(Flow))                       # Calculate the average daily flow for each month\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\n\n#1: Convert to tsibble\n\npoud_tbl &lt;- as_tsibble(poudre_flow)\n\nUsing `Date` as index variable.\n\nhead(poud_tbl)\n\n# A tsibble: 6 x 2 [1M]\n      Date   Flow\n     &lt;mth&gt;  &lt;dbl&gt;\n1 2013 Jan  18.1 \n2 2013 Feb  18.0 \n3 2013 Mar   8.21\n4 2013 Apr   5.94\n5 2013 May 333.  \n6 2013 Jun 300.  \n\n\n#2: Plotting the time series\n\nflow_plot &lt;- ggplot(poudre_flow, aes(x = Date, y = Flow)) + \n  geom_line(color = \"blue\") + \n  labs(title = \"Cache la Poudre River Streamflow\", \n       x = \"Date\", y = \"Flow (cfs)\") + \n  theme_minimal ()\nggplotly(flow_plot)\n\n\n\n\n\n#3: Subseries plot\n\ngg_subseries(poud_tbl) + \n  labs(title = \"Monthly Streamflow Patterns\", y = \"Flow\", x = \"Year\") + \n  theme_minimal()\n\nPlot variable not specified, automatically selected `y = Flow`\n\n\n\n\n\n\n\n\n\n#I noticed very high streamflow levels in May and June. This could be caused by spring precipitation, snowmelt, or glacial melt when temperatures begin increasing after winter. I also noticed that streamflow is very consistently low from October to March, which could be consistent with cooler temperatures preventing melting of snow, as well as less precipitation in general. The subseries compares streamflow taken at the same time each year for 10 years, so that we can compare differences from year to year in streamflow. Things like flooding can be seen, and in this subseries there is a possible flood in September within the 10 year period.\n#4: Decompose\n\npoud_decomp &lt;- stl(poud_tbl, s.window = \"periodic\") |&gt;\n  plot()\n\n\n\n\n\n\n\n\n#Seasonal streamflow has stayed relatively the same across the data, which spans over a 10 year period. see small patterns of lower streamflow in 2020 versus higher streamflow in 2014-2016. Seasonal portrayal of the data is the most effective due to the seasonal changes of streamflow, which increase and decrease in relation to snowmelt and rainfall."
  },
  {
    "objectID": "exercise_21_and_22.html",
    "href": "exercise_21_and_22.html",
    "title": "Exercise 21 and 22",
    "section": "",
    "text": "#Exercise 21:\n\nlibrary(dataRetrieval)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.2\n✔ recipes      1.1.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(lubridate)\nlibrary(tsibble)\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:zoo':\n\n    index\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\nlibrary(feasts)\n\nLoading required package: fabletools\n\nAttaching package: 'fabletools'\n\nThe following object is masked from 'package:yardstick':\n\n    accuracy\n\nThe following object is masked from 'package:parsnip':\n\n    null_model\n\nThe following objects are masked from 'package:infer':\n\n    generate, hypothesize\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Example: Cache la Poudre River at Mouth (USGS site 06752260)\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",    # Download data from USGS for site 06752260\n                          parameterCd = \"00060\",      # Parameter code 00060 = discharge in cfs)\n                          startDate = \"2013-01-01\",   # Set the start date\n                          endDate = \"2023-12-31\") |&gt;  # Set the end date\n  renameNWISColumns() |&gt;                              # Rename columns to standard names (e.g., \"Flow\", \"Date\")\n  mutate(Date = yearmonth(Date)) |&gt;                   # Convert daily Date values into a year-month format (e.g., \"2023 Jan\")\n  group_by(Date) |&gt;                                   # Group the data by the new monthly Date\n  summarise(Flow = mean(Flow))                       # Calculate the average daily flow for each month\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\n\n#1: Convert to tsibble\n\npoud_tbl &lt;- as_tsibble(poudre_flow)\n\nUsing `Date` as index variable.\n\nhead(poud_tbl)\n\n# A tsibble: 6 x 2 [1M]\n      Date   Flow\n     &lt;mth&gt;  &lt;dbl&gt;\n1 2013 Jan  18.1 \n2 2013 Feb  18.0 \n3 2013 Mar   8.21\n4 2013 Apr   5.94\n5 2013 May 333.  \n6 2013 Jun 300.  \n\n\n#2: Plotting the time series\n\nflow_plot &lt;- ggplot(poudre_flow, aes(x = Date, y = Flow)) + \n  geom_line(color = \"blue\") + \n  labs(title = \"Cache la Poudre River Streamflow\", \n       x = \"Date\", y = \"Flow (cfs)\") + \n  theme_minimal ()\nggplotly(flow_plot)\n\n\n\n\n\n#3: Subseries plot\n\ngg_subseries(poud_tbl) + \n  labs(title = \"Monthly Streamflow Patterns\", y = \"Flow\", x = \"Year\") + \n  theme_minimal()\n\nPlot variable not specified, automatically selected `y = Flow`\n\n\n\n\n\n\n\n\n\n#I noticed very high streamflow levels in May and June. This could be caused by spring precipitation, snowmelt, or glacial melt when temperatures begin increasing after winter. I also noticed that streamflow is very consistently low from October to March, which could be consistent with cooler temperatures preventing melting of snow, as well as less precipitation in general. The subseries compares streamflow taken at the same time each year for 10 years, so that we can compare differences from year to year in streamflow. Things like flooding can be seen, and in this subseries there is a possible flood in September within the 10 year period.\n#4: Decompose\n\npoud_decomp &lt;- stl(poud_tbl, s.window = \"periodic\") |&gt;\n  plot()\n\n\n\n\n\n\n\n\n#Seasonal streamflow has stayed relatively the same across the data, which spans over a 10 year period. see small patterns of lower streamflow in 2020 versus higher streamflow in 2014-2016. Seasonal portrayal of the data is the most effective due to the seasonal changes of streamflow, which increase and decrease in relation to snowmelt and rainfall.\n#Exercise 22:\n#Modeltime 12 month prediction:\n\nlibrary(modeltime)\nlibrary(tidymodels)\nlibrary(timetk)\n\npoud_pred_tbl &lt;- tsibble::as_tsibble(poudre_flow) |&gt;\n  as_tibble() |&gt;\n  mutate(date = as.Date(Date), Date = NULL)\n\nUsing `Date` as index variable.\n\nsplits &lt;- time_series_split(poud_pred_tbl, assess = \"12 months\", cumulative = TRUE)\n\nUsing date_var: date\n\npoud_training &lt;- training(splits)\npoud_testing &lt;- testing(splits)\n\n#Prophet Model\n\nproph_mod &lt;- arima_reg() |&gt; set_engine(\"auto_arima\")\narima_mod &lt;- prophet_reg() |&gt; set_engine(\"prophet\")\n\nmods &lt;- list(\n  fit(proph_mod, Flow ~ date, data = poud_training), \n  fit(arima_mod, Flow ~ date, data = poud_training)\n)\n\nfrequency = 12 observations per 1 year\n\n\nDisabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this.\n\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\n\n\nmodels_tbl &lt;- as_modeltime_table(mods)\nprint(models_tbl)\n\n# Modeltime Table\n# A tibble: 2 × 3\n  .model_id .model   .model_desc            \n      &lt;int&gt; &lt;list&gt;   &lt;chr&gt;                  \n1         1 &lt;fit[+]&gt; ARIMA(0,0,2)(0,1,2)[12]\n2         2 &lt;fit[+]&gt; PROPHET                \n\n\n\ncalibration_table &lt;- models_tbl |&gt;\n  modeltime_calibrate(new_data = poud_testing)\nprint(calibration_table)\n\n# Modeltime Table\n# A tibble: 2 × 5\n  .model_id .model   .model_desc             .type .calibration_data\n      &lt;int&gt; &lt;list&gt;   &lt;chr&gt;                   &lt;chr&gt; &lt;list&gt;           \n1         1 &lt;fit[+]&gt; ARIMA(0,0,2)(0,1,2)[12] Test  &lt;tibble [12 × 4]&gt;\n2         2 &lt;fit[+]&gt; PROPHET                 Test  &lt;tibble [12 × 4]&gt;\n\n\n\nmodeltime_accuracy(calibration_table) |&gt;\n  arrange(mae)\n\n# A tibble: 2 × 9\n  .model_id .model_desc             .type   mae  mape  mase smape  rmse   rsq\n      &lt;int&gt; &lt;chr&gt;                   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1         1 ARIMA(0,0,2)(0,1,2)[12] Test   105.  86.2 0.380  50.6  246. 0.965\n2         2 PROPHET                 Test   161. 381.  0.582 161.   228. 0.855\n\n\n\n(forecast &lt;- calibration_table |&gt;\n   modeltime_forecast(h = \"12 months\", \n                      new_data = poud_testing, \n                      actual_data = poud_tbl))\n\nError: No date or date-time identified.\n\n\nWarning: Unknown or uninitialised column: `.key`.\n\n\n# Forecast Results\n  \n\n\nConf Method: conformal_default | Conf Interval: 0.95 | Conf By ID: FALSE\n(GLOBAL CONFIDENCE)\n\n\n# A tibble: 12 × 7\n   .model_id .model_desc .key       .index       .value .conf_lo .conf_hi\n       &lt;int&gt; &lt;chr&gt;       &lt;fct&gt;      &lt;date&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1         2 PROPHET     prediction 2024-01-01 -127.       -584.     329.\n 2         2 PROPHET     prediction 2024-02-01 -132.       -588.     324.\n 3         2 PROPHET     prediction 2024-03-01 -121.       -578.     335.\n 4         2 PROPHET     prediction 2024-04-01  -67.1      -523.     389.\n 5         2 PROPHET     prediction 2024-05-01  706.        249.    1162.\n 6         2 PROPHET     prediction 2024-06-01  770.        314.    1227.\n 7         2 PROPHET     prediction 2024-07-01   -0.832    -457.     456.\n 8         2 PROPHET     prediction 2024-08-01  -58.1      -514.     398.\n 9         2 PROPHET     prediction 2024-09-01   -7.89     -464.     448.\n10         2 PROPHET     prediction 2024-10-01 -101.       -557.     356.\n11         2 PROPHET     prediction 2024-11-01 -135.       -591.     322.\n12         2 PROPHET     prediction 2024-12-01 -128.       -584.     329.\n\n\n\nplot_modeltime_forecast(forecast)\n\n\n\n\n\n\nrefit_tbl &lt;- calibration_table |&gt;\n  modeltime_refit(data = poud_pred_tbl)\n\nfrequency = 12 observations per 1 year\n\n\nDisabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this.\n\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\nrefit_tbl |&gt;\n  modeltime_forecast(h = \"12 months\", actual_data = poud_tbl) |&gt;\n  plot_modeltime_forecast()\n\nError: No date or date-time identified.\n\n\nWarning: Unknown or uninitialised column: `.key`.\n\n\n\n\n\n\n#Data Retrieval\n\nlibrary(dataRetrieval)\n\nreal_poudre_flow &lt;- readNWISdv(siteNumber = \"06752260\", \n                               startDate = \"2024-01-01\", \n                               endDate = \"2024-12-31\", \n                               parameterCd = \"00060\") |&gt;\n  renameNWISColumns() |&gt;\n  mutate(month = yearmonth(Date)) |&gt; \n  group_by(month) |&gt;\n  summarise(real_flow = mean(Flow))\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2024-01-01&endDT=2024-12-31\n\n\n\npreds &lt;- forecast %&gt;%\n  filter(.key == \"prediction\") %&gt;%\n  select(month = .index, predicted = .value)\n\ncomparison &lt;- left_join(preds, real_poudre_flow, by = \"month\") %&gt;%\n  drop_na()\n\n#R-Squared\n\nrsq_val &lt;- lm(real_flow ~ predicted, data = comparison) %&gt;%\n  glance() %&gt;%\n  pull(r.squared)\nprint(rsq_val)\n\n[1] 0.8249846\n\n\n#The model explains 82% of the variance, or is 82% accurate in comparison to the actual data.\n#Predicted vs Observed Plot\n\nggplot(comparison, aes(x = real_flow, y = predicted)) + \n  geom_point(size = 3, color = \"lightblue\") + \n  geom_smooth(method = \"lm\", color = \"blue\", se = FALSE) + \n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"black\") + \n  labs(\n    title = \"Predicted Versus Observed Streamflow\", \n    x = \"Observed (cfs)\", \n    y = \"Predicted (cfs)\") + \n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "lab-10.html",
    "href": "lab-10.html",
    "title": "Lab 10: Distances and the Border Zone",
    "section": "",
    "text": "# spatial data science\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nudunits database from /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/units/share/udunits/udunits2.xml\n\nlibrary(dplyr)\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\n# Data\nlibrary(AOI)\n\n# Visualization\nlibrary(gghighlight)\nlibrary(ggrepel)\nlibrary(knitr)\n\n#1.1\n\neqdc &lt;- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'\n\n#1.2\n\naoi_get(state = 'conus')\n\nSimple feature collection with 49 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -124.8485 ymin: 24.39631 xmax: -66.88544 ymax: 49.38448\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   state_region state_division feature_code           state_name state_abbr\n1             3              6      1779775              Alabama         AL\n2             4              8      1779777              Arizona         AZ\n3             3              7      0068085             Arkansas         AR\n4             4              9      1779778           California         CA\n5             4              8      1779779             Colorado         CO\n6             1              1      1779780          Connecticut         CT\n7             3              5      1779781             Delaware         DE\n8             3              5      1702382 District of Columbia         DC\n9             3              5      0294478              Florida         FL\n10            3              5      1705317              Georgia         GA\n                   name fip_class tiger_class combined_area_code\n1               Alabama      &lt;NA&gt;       G4000                 NA\n2               Arizona      &lt;NA&gt;       G4000                 NA\n3              Arkansas      &lt;NA&gt;       G4000                 NA\n4            California      &lt;NA&gt;       G4000                 NA\n5              Colorado      &lt;NA&gt;       G4000                 NA\n6           Connecticut      &lt;NA&gt;       G4000                 NA\n7              Delaware      &lt;NA&gt;       G4000                 NA\n8  District of Columbia      &lt;NA&gt;       G4000                 NA\n9               Florida      &lt;NA&gt;       G4000                 NA\n10              Georgia      &lt;NA&gt;       G4000                 NA\n   metropolitan_area_code functional_status    land_area  water_area fip_code\n1                    &lt;NA&gt;                 A 131175477769  4591897964       01\n2                    &lt;NA&gt;                 A 294363973043   855871553       04\n3                    &lt;NA&gt;                 A 134660767709  3121950081       05\n4                    &lt;NA&gt;                 A 403671756816 20293573058       06\n5                    &lt;NA&gt;                 A 268418796417  1185716938       08\n6                    &lt;NA&gt;                 A  12541690473  1816424193       09\n7                    &lt;NA&gt;                 A   5046731559  1399179670       10\n8                    &lt;NA&gt;                 A    158316124    18709762       11\n9                    &lt;NA&gt;                 A 138961722096 45972570361       12\n10                   &lt;NA&gt;                 A 149486624386  4418360134       13\n                         geometry\n1  MULTIPOLYGON (((-85.4883 30...\n2  MULTIPOLYGON (((-110.7507 3...\n3  MULTIPOLYGON (((-90.95577 3...\n4  MULTIPOLYGON (((-116.1062 3...\n5  MULTIPOLYGON (((-105.155 36...\n6  MULTIPOLYGON (((-72.5279 41...\n7  MULTIPOLYGON (((-75.13846 3...\n8  MULTIPOLYGON (((-77.00244 3...\n9  MULTIPOLYGON (((-83.10874 2...\n10 MULTIPOLYGON (((-81.09538 3...\n\n\n#1.3\n\naoi_get(country = c(\"MX\", \"CA\", \"USA\"))\n\nSimple feature collection with 3 features and 168 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -171.7911 ymin: 14.53883 xmax: -52.6481 ymax: 83.23324\nGeodetic CRS:  WGS 84\n        featurecla scalerank labelrank               sovereignt sov_a3 adm0_dif\n4  Admin-0 country         1         2                   Canada    CAN        0\n5  Admin-0 country         1         2 United States of America    US1        1\n28 Admin-0 country         1         2                   Mexico    MEX        0\n   level              type tlc                    admin adm0_a3 geou_dif\n4      2 Sovereign country   1                   Canada     CAN        0\n5      2           Country   1 United States of America     USA        0\n28     2 Sovereign country   1                   Mexico     MEX        0\n                    geounit gu_a3 su_dif       subunit su_a3 brk_diff\n4                    Canada   CAN      0        Canada   CAN        0\n5  United States of America   USA      0 United States   USA        0\n28                   Mexico   MEX      0        Mexico   MEX        0\n                       name     name_long brk_a3      brk_name brk_group abbrev\n4                    Canada        Canada    CAN        Canada      &lt;NA&gt;   Can.\n5  United States of America United States    USA United States      &lt;NA&gt; U.S.A.\n28                   Mexico        Mexico    MEX        Mexico      &lt;NA&gt;   Mex.\n   postal                formal_en formal_fr    name_ciawf note_adm0 note_brk\n4      CA                   Canada      &lt;NA&gt;        Canada      &lt;NA&gt;     &lt;NA&gt;\n5      US United States of America      &lt;NA&gt; United States      &lt;NA&gt;     &lt;NA&gt;\n28     MX    United Mexican States      &lt;NA&gt;        Mexico      &lt;NA&gt;     &lt;NA&gt;\n                  name_sort name_alt mapcolor7 mapcolor8 mapcolor9 mapcolor13\n4                    Canada     &lt;NA&gt;         6         6         2          2\n5  United States of America     &lt;NA&gt;         4         5         1          1\n28                   Mexico     &lt;NA&gt;         6         1         7          3\n     pop_est pop_rank pop_year   gdp_md gdp_year                  economy\n4   37589262       15     2019  1736425     2019  1. Developed region: G7\n5  328239523       17     2019 21433226     2019  1. Developed region: G7\n28 127575529       17     2019  1268870     2019 4. Emerging region: MIKT\n               income_grp fips_10 iso_a2 iso_a2_eh iso_a3 iso_a3_eh iso_n3\n4    1. High income: OECD      CA     CA        CA    CAN       CAN    124\n5    1. High income: OECD      US     US        US    USA       USA    840\n28 3. Upper middle income      MX     MX        MX    MEX       MEX    484\n   iso_n3_eh un_a3 wb_a2 wb_a3   woe_id woe_id_eh                   woe_note\n4        124   124    CA   CAN 23424775  23424775 Exact WOE match as country\n5        840   840    US   USA 23424977  23424977 Exact WOE match as country\n28       484   484    MX   MEX 23424900  23424900 Exact WOE match as country\n   adm0_iso adm0_diff adm0_tlc adm0_a3_us adm0_a3_fr adm0_a3_ru adm0_a3_es\n4       CAN      &lt;NA&gt;      CAN        CAN        CAN        CAN        CAN\n5       USA      &lt;NA&gt;      USA        USA        USA        USA        USA\n28      MEX      &lt;NA&gt;      MEX        MEX        MEX        MEX        MEX\n   adm0_a3_cn adm0_a3_tw adm0_a3_in adm0_a3_np adm0_a3_pk adm0_a3_de adm0_a3_gb\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_br adm0_a3_il adm0_a3_ps adm0_a3_sa adm0_a3_eg adm0_a3_ma adm0_a3_pt\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_ar adm0_a3_jp adm0_a3_ko adm0_a3_vn adm0_a3_tr adm0_a3_id adm0_a3_pl\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_gr adm0_a3_it adm0_a3_nl adm0_a3_se adm0_a3_bd adm0_a3_ua adm0_a3_un\n4         CAN        CAN        CAN        CAN        CAN        CAN        -99\n5         USA        USA        USA        USA        USA        USA        -99\n28        MEX        MEX        MEX        MEX        MEX        MEX        -99\n   adm0_a3_wb     continent region_un        subregion\n4         -99 North America  Americas Northern America\n5         -99 North America  Americas Northern America\n28        -99 North America  Americas  Central America\n                   region_wb name_len long_len abbrev_len tiny homepart\n4              North America        6        6          4  -99        1\n5              North America       24       13          6  -99        1\n28 Latin America & Caribbean        6        6          4  -99        1\n   min_zoom min_label max_label   label_x  label_y      ne_id wikidataid\n4         0       1.7       5.7 -101.9107 60.32429 1159320467        Q16\n5         0       1.7       5.7  -97.4826 39.53848 1159321369        Q30\n28        0       2.0       6.7 -102.2894 23.91999 1159321055        Q96\n            name_ar         name_bn            name_de                  name_en\n4              كندا          কানাডা             Kanada                   Canada\n5  الولايات المتحدة মার্কিন যুক্তরাষ্ট্র Vereinigte Staaten United States of America\n28          المكسيك         মেক্সিকো             Mexiko                   Mexico\n          name_es             name_fa    name_fr                     name_el\n4          Canadá              کانادا     Canada                     Καναδάς\n5  Estados Unidos ایالات متحده آمریکا États-Unis Ηνωμένες Πολιτείες Αμερικής\n28         México               مکزیک    Mexique                      Μεξικό\n       name_he          name_hi                   name_hu         name_id\n4         קנדה            कनाडा                    Kanada          Kanada\n5  ארצות הברית संयुक्त राज्य अमेरिका Amerikai Egyesült Államok Amerika Serikat\n28      מקסיקו           मेक्सिको                    Mexikó         Meksiko\n                 name_it        name_ja name_ko                      name_nl\n4                 Canada         カナダ  캐나다                       Canada\n5  Stati Uniti d'America アメリカ合衆国    미국 Verenigde Staten van Amerika\n28               Messico       メキシコ  멕시코                       Mexico\n             name_pl        name_pt name_ru name_sv                     name_tr\n4             Kanada         Canadá  Канада  Kanada                      Kanada\n5  Stany Zjednoczone Estados Unidos     США     USA Amerika Birleşik Devletleri\n28            Meksyk         México Мексика  Mexiko                     Meksika\n                   name_uk                name_ur name_vi name_zh name_zht\n4                   Канада                 کینیڈا  Canada  加拿大   加拿大\n5  Сполучені Штати Америки ریاستہائے متحدہ امریکا  Hoa Kỳ    美国     美國\n28                 Мексика                میکسیکو  México  墨西哥   墨西哥\n        fclass_iso tlc_diff      fclass_tlc fclass_us fclass_fr fclass_ru\n4  Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5  Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28 Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_es fclass_cn fclass_tw fclass_in fclass_np fclass_pk fclass_de\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_gb fclass_br fclass_il fclass_ps fclass_sa fclass_eg fclass_ma\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_pt fclass_ar fclass_jp fclass_ko fclass_vn fclass_tr fclass_id\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_pl fclass_gr fclass_it fclass_nl fclass_se fclass_bd fclass_ua\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n                         geometry\n4  MULTIPOLYGON (((-122.84 49,...\n5  MULTIPOLYGON (((-122.84 49,...\n28 MULTIPOLYGON (((-117.1278 3...\n\neqdc &lt;- st_crs (5070)\n\ncountries &lt;- rnaturalearth::countries110 |&gt;\n  st_transform(eqdc)\n\nstates &lt;- USAboundaries::us_states(resolution = \"low\") |&gt;\n  filter(!state_abbr %in% c(\"HI\", \"AK\", \"PR\")) |&gt;\n  st_transform(eqdc)\n\n#1.4\n\nlibrary(readr)\ncities &lt;- read_csv(\"uscities.csv\", show_col_types = FALSE) |&gt;\n  st_as_sf(coords = c(\"lng\", \"lat\"), crs = 4326) |&gt;\n  st_transform(eqdc)\n\n#2.1\n\nstate_union &lt;- st_union(states) %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_as_sf()\n\nborder_cities &lt;- cities %&gt;%\n  st_filter(st_union(states)) %&gt;%\n  filter(!state_id %in% c(\"HI\", \"AK\", \"PR\")) %&gt;%\n  mutate(dist_to_border = set_units(st_distance(., state_union), \"km\"))\n\nselect(border_cities, city, state_name, dist_to_border) %&gt;%\n  st_drop_geometry() %&gt;%\n  slice_max(dist_to_border, n = 5) %&gt;%\n  flextable::flextable()\n\ncitystate_namedist_to_borderHill CityKansas1,035.640 [km]PalcoKansas1,032.352 [km]DresdenKansas1,031.530 [km]JenningsKansas1,030.252 [km]BogueKansas1,028.531 [km]\n\n\n#2.2\n\nstate_combine &lt;- st_combine(states) %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_as_sf()\n\nstate_cities &lt;- cities %&gt;%\n  st_filter(st_combine(states)) %&gt;%\n  filter(!state_id %in% c(\"HI\", \"AK\", \"PR\")) %&gt;%\n  mutate(dist_to_state = set_units(st_distance(., state_combine), \"km\"))\n\nselect(state_cities, city, state_name, dist_to_state) %&gt;%\n  st_drop_geometry() %&gt;%\n  slice_max(dist_to_state, n = 5) %&gt;%\n  flextable::flextable()\n\ncitystate_namedist_to_stateBriggsTexas313.0450 [km]LampasasTexas311.6903 [km]BertramTexas307.1177 [km]KempnerTexas304.9309 [km]FlorenceTexas301.8879 [km]\n\n\n#2.3\n\nmexico_boundary &lt;- countries %&gt;%\n  filter(ADM0_A3 == \"MEX\") %&gt;%\n  st_union() %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_as_sf()  \n\ncity_distances_to_mexico &lt;- cities %&gt;%\n  st_join(mexico_boundary, join = st_intersects) %&gt;%\n  filter(!state_id %in% c(\"HI\", \"AK\", \"PR\")) %&gt;%\n  mutate(dist_to_mexico = set_units(st_distance(., mexico_boundary), \"km\"))\n\ncity_distances_to_mexico %&gt;%\n  select(city, state_name, dist_to_mexico) %&gt;%\n  st_drop_geometry() %&gt;%\n  slice_max(dist_to_mexico, n = 5) %&gt;%\n  flextable::flextable()\n\ncitystate_namedist_to_mexicoGrand IsleMaine3,324.038 [km]CaribouMaine3,292.781 [km]Presque IsleMaine3,277.282 [km]OakfieldMaine3,218.408 [km]VanceboroMaine3,207.913 [km]\n\n\n#2.4\n\ncanada_boundary &lt;- countries %&gt;%\n  filter(ADM0_A3 == \"CAN\") %&gt;%\n  st_union() %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_as_sf()  \n\ncity_distances_to_canada &lt;- cities %&gt;%\n  st_join(canada_boundary, join = st_intersects) %&gt;%\n  filter(!state_id %in% c(\"HI\", \"AK\", \"PR\")) %&gt;%\n  mutate(dist_to_canada = set_units(st_distance(., canada_boundary), \"km\"))\n\ncity_distances_to_canada %&gt;%\n  select(city, state_name, dist_to_canada) %&gt;%\n  st_drop_geometry() %&gt;%\n  slice_max(dist_to_canada, n = 5) %&gt;%\n  flextable::flextable()\n\ncitystate_namedist_to_canadaGuadalupe GuerraTexas2,255.590 [km]SandovalTexas2,254.783 [km]FrontonTexas2,253.938 [km]Fronton RanchettesTexas2,251.062 [km]EvergreenTexas2,250.952 [km]\n\n\n#3.1\n\nstates &lt;- AOI::aoi_get(state = 'conus') %&gt;%\n  st_transform(crs = 5070)  \ncities &lt;- read_csv(\"uscities.csv\", show_col_types = FALSE) %&gt;%\n  st_as_sf(coords = c(\"lng\", \"lat\"), crs = 4326) %&gt;%\n  st_transform(crs = 5070)\n\nlargest_cities &lt;- cities %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice_head(n = 10)\n\ncontinents &lt;- AOI::aoi_get(country = c(\"USA\", \"MEX\", \"CA\")) %&gt;%\n  st_transform(crs = 5070)\n\nlargest_cities_coords &lt;- largest_cities %&gt;%\n  st_coordinates() %&gt;%\n  as.data.frame() %&gt;%\n  bind_cols(largest_cities %&gt;% st_drop_geometry())\n\nggplot() +\n  geom_sf(data = continents, fill = \"lightblue\", color = \"black\") +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.8) +\n  geom_sf(data = largest_cities, aes(color = population), size = 2) +\n  geom_label_repel(data = largest_cities_coords, aes(x = X, y = Y, label = city), \n                   box.padding = 0.3, point.padding = 0.5,\n                   max.overlaps = 10) + \n  theme_minimal() +\n  labs(\n    title = \"USA: Largest Cities, State Boundaries, and Continents\",\n    subtitle = \"Top 10 largest cities by population\",\n    caption = \"Source: US cities and boundaries data\"\n  )\n\n\n\n\n\n\n\n\n#3.2\n\ncities_dist_to_border &lt;- cities %&gt;%\n  st_filter(st_union(states)) %&gt;%\n  mutate(dist_to_border = st_distance(., state_union) %&gt;%\n           set_units(\"km\"))\n\ncities_dist_to_border &lt;- cities_dist_to_border %&gt;%\n  mutate(dist_to_border_numeric = as.numeric(dist_to_border))\n\ncities_far_from_border &lt;- cities_dist_to_border %&gt;%\n  slice_max(dist_to_border_numeric, n = 5)\n\ncities_far_from_border_coords &lt;- st_coordinates(cities_far_from_border)\n\nggplot() +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.8, linetype = \"solid\") +\n  geom_sf(data = cities_dist_to_border, aes(color = dist_to_border_numeric), size = 2) +\n  geom_label_repel(data = cities_far_from_border_coords, \n                   aes(x = X, y = Y, label = cities_far_from_border$city), \n                   box.padding = 0.3, \n                   point.padding = 0.5, \n                   max.overlaps = 10) +\n  theme_minimal() +\n  labs(\n    title = \"Cities by Distance to National Border\",\n    subtitle = \"Labeling the 5 cities farthest from the national border\",\n    caption = \"Source: US Cities and Borders\"\n  )\n\n\n\n\n\n\n\n\n#3.3\n\nstates &lt;- USAboundaries::us_states(resolution = \"low\") %&gt;%\n  filter(!state_abbr %in% c(\"HI\", \"AK\", \"PR\")) %&gt;%\n  st_transform(eqdc)\n\nstate_union &lt;- st_union(states) %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_as_sf()\n\ncity_dist_to_state &lt;- cities %&gt;%\n  st_transform(eqdc) %&gt;%\n  mutate(dist_to_state = st_distance(., state_union)) %&gt;%\n  mutate(dist_to_state_numeric = as.numeric(dist_to_state))  \n\ncities_far_from_state_border &lt;- city_dist_to_state %&gt;%\n  slice_max(dist_to_state_numeric, n = 5)\n\ncities_far_from_state_border_coords &lt;- st_coordinates(cities_far_from_state_border)\ncities_far_from_state_border &lt;- cities_far_from_state_border %&gt;%\n  bind_cols(as.data.frame(cities_far_from_state_border_coords)) %&gt;%\n  rename(x = X, y = Y)\n\nggplot() +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.8, linetype = \"solid\") +\n  geom_sf(data = city_dist_to_state, aes(color = dist_to_state_numeric), size = 2) +\n  geom_label_repel(data = cities_far_from_state_border, \n                   aes(x = x, y = y, label = city), \n                   box.padding = 0.3, \n                   point.padding = 0.5, \n                   max.overlaps = 10) +\n  \n  theme_minimal() +\n  labs(\n    title = \"Cities by Distance from Nearest State Border\",\n    subtitle = \"Labeling the 5 cities farthest from the nearest state border\",\n    caption = \"Source: US Cities and State Boundaries\"\n  )\n\n\n\n\n\n\n\n\n#3.4\n\ncities &lt;- cities %&gt;%\n  mutate(dist_to_mexico = set_units(st_distance(., mexico_boundary), \"km\")) %&gt;%\n  mutate(dist_to_canada = set_units(st_distance(., canada_boundary), \"km\")) %&gt;%\n  mutate(dist_to_border = set_units(st_distance(., state_union), \"km\"))\n\neqdist &lt;- cities %&gt;%\n  mutate(equidist_diff = as.numeric(dist_to_mexico) - \n           as.numeric(dist_to_canada))\n\neqdist_zone &lt;- eqdist %&gt;%\n  mutate(abs_diff = abs(equidist_diff)) %&gt;%\n  slice_min(abs_diff, n = 20)\n\ntop_5_eqdist &lt;- eqdist_zone %&gt;%\n  slice_max(population, n = 5)\n\nggplot() + \n  geom_sf(data = continents, lty = 3, alpha = .5) +\n  geom_sf(data = states, size = 1, fill = \"NA\", color = \"grey\") + \n  geom_sf(data = cities, size = 1.5, fill = \"NA\", color = \"black\") + \n  geom_sf(data = eqdist) + \n  gghighlight::gghighlight(abs(equidist_diff) &lt; 100) + \n  geom_sf(data = top_5_eqdist, size = 2, color = \"red\") + \n  ggrepel::geom_label_repel(\n    data = top_5_eqdist, \n    aes(label = city, geometry = geometry), \n    stat = \"sf_coordinates\", \n    size = 3) + \n  ggthemes::theme_map()\n\nWarning: Could not calculate the predicate for layer 1, layer 2, layer 3;\nignored\n\n\n\n\n\n\n\n\n\n#4.1\n\nborder_zone &lt;- cities %&gt;%\n  filter(as.numeric(dist_to_border) &lt;= 160)\n\nn_border_zone &lt;- nrow(border_zone)\n\nborder_zone_pop &lt;- border_zone %&gt;%\n  st_drop_geometry() %&gt;%\n  summarise(total_population = sum(population, na.rm = TRUE)) %&gt;%\n  pull(total_population)\n\ntotal_pop &lt;- cities %&gt;%\n  st_drop_geometry() %&gt;%\n  summarise(total_population = sum(population, na.rm = TRUE)) %&gt;%\n  pull(total_population)\n\npop_percentage &lt;- (border_zone_pop / total_pop) * 100\n\nsummary_df &lt;- data.frame(\n  'Number of Cities in Border Zone' = n_border_zone, \n  'Population in Border Zone' = border_zone_pop, \n  'Total Population' = total_pop, \n  'Percent in Border Zone' = round(pop_percentage, 2)\n)\n\nflextable::flextable(summary_df)\n\nNumber.of.Cities.in.Border.ZonePopulation.in.Border.ZoneTotal.PopulationPercent.in.Border.Zone12,968255,355,775402,301,85463.47\n\n\n#This is accurate in comparison to the ACLU estimate that states close to 2/3 of the population lives within the danger zone\n#4.2\n\nborder_zone &lt;- cities %&gt;%\n  filter(as.numeric(dist_to_border) &lt;= 160)\n\ndanger_top10 &lt;- border_zone %&gt;%\n  slice_max(population, n = 10)\n\nggplot() + \n  geom_sf(data = cities, aes(color = population), alpha = .4, size = .8) + \n  gghighlight::gghighlight(as.numeric(dist_to_border) &lt;= 160, \n                           label_key = city, \n                           use_direct_label = FALSE, \n                           keep_scales = TRUE) + \n  scale_color_gradient(low = \"darkblue\", high = \"lightblue\", name = \"Distance to the Border\") + \n  geom_sf(data = danger_top10, color = \"red\", size = 2) + \n  ggrepel::geom_label_repel(\n    data = danger_top10, \n    aes(label = city, geometry = geometry), \n    stat = \"sf_coordinates\", \n    size = 3, \n    fill = \"white\"\n  ) + \n  labs(title = \"US Cities Within 100 Miles of the Border\") + \n  ggthemes::theme_map()\n\n\n\n\n\n\n\n\n#4.3\n\nborder_zone &lt;- cities %&gt;%\n  filter(as.numeric(dist_to_border) &lt;= 160)\n\ntop_city_per_state &lt;- border_zone %&gt;%\n  group_by(state_name) %&gt;%\n  slice_max(population, n = 1, with_ties = FALSE) %&gt;%\n  ungroup()\n\nggplot() + \n  geom_sf(data = border_zone, aes(color = population), alpha = .4, size = .8) + \n  scale_color_gradient(low = \"darkblue\", high = \"lightblue\", name = \"Distance to the Border\") + \n  geom_sf(data = top_city_per_state, color = \"red\", size = 2) + \n  ggrepel::geom_label_repel(\n    data = top_city_per_state, \n    aes(label = city, geometry = geometry), \n    stat = \"sf_coordinates\", \n    size = 3, \n    fill = \"white\"\n  ) + \n  labs(title = \"Most Populous US Cities Within 100 Miles of the Border\") + \n  ggthemes::theme_map()\n\nWarning: ggrepel: 3 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "exercise_27_28.html",
    "href": "exercise_27_28.html",
    "title": "Daily Exercise 27 and 28",
    "section": "",
    "text": "#1\n\nlibrary(osmdata)\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nbbox_fort_collins &lt;- c(-105.15, 40.45, -105.00, 40.70)  # (xmin, ymin, xmax, ymax)\n\nosm_data &lt;- opq(bbox = bbox_fort_collins) %&gt;%\n  add_osm_feature(key = 'waterway') %&gt;%\n  osmdata_sf()\n\nosm_lines &lt;- osm_data$osm_lines\n\n#2\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\npoudre_river &lt;- osm_lines %&gt;%\n  filter(name == \"Cache la Poudre River\")\n\npoudre_river_union &lt;- st_union(poudre_river)\n\npoudre_river_sf &lt;- st_as_sf(poudre_river_union)\n\n#3\n\nriver_length &lt;- st_length(poudre_river_sf)\nprint(river_length)\n\n169209.4 [m]\n\n\n#4\n\npoudre_pts &lt;- st_cast(poudre_river_sf, \"POINT\")\n\nplot(poudre_pts)\n\n\n\n\n\n\n\n\n\nurl &lt;- 'https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/foco-elev-cm.tif'\n\nlocal_file &lt;- tempfile(fileext = \".tif\")\n\ndownload.file(url, local_file, mode = \"wb\")\n\n#5\n\nlibrary(terra)\n\nterra 1.8.42\n\nlibrary(raster)\n\nLoading required package: sp\n\n\n\nAttaching package: 'raster'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nelevation_raster &lt;- rast(local_file)\n\nprint(elevation_raster)\n\nclass       : SpatRaster \ndimensions  : 725, 572, 1  (nrow, ncol, nlyr)\nresolution  : 30, 30  (x, y)\nextent      : -769695, -752535, 1978485, 2000235  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs \nsource      : file5e81594dc04.tif \nname        :    dem \nmin value   : 146730 \nmax value   : 197781 \n\nelevation_df &lt;- as.data.frame(elevation_raster, xy = TRUE)\n\nhead(elevation_df)\n\n        x       y    dem\n1 -769680 2000220 162222\n2 -769650 2000220 162186\n3 -769620 2000220 162160\n4 -769590 2000220 162133\n5 -769560 2000220 162124\n6 -769530 2000220 162127\n\nplot(elevation_raster)\n\n\n\n\n\n\n\n\n#6\n\nelevation_values &lt;- terra::extract(elevation_raster, vect(poudre_pts))\n\nWarning: [extract] transforming vector data to the CRS of the raster\n\n\n#7\n\npoudre_pts_elevation &lt;- bind_cols(poudre_pts, elevation_values)\n\n#8\n\npoudre_pts_elevation &lt;- poudre_pts_elevation %&gt;%\n  mutate(ID = seq(1, n()))\n\n#9\n\nstraight_line_distance &lt;- st_distance(poudre_pts_elevation[1,], poudre_pts_elevation[nrow(poudre_pts_elevation),])\n\nsinuosity &lt;- river_length / straight_line_distance\nprint(sinuosity)\n\nUnits: [1]\n         [,1]\n[1,] 2.153559\n\n\n#10\n\nelevation_change &lt;- abs(poudre_pts_elevation$dem[1] - poudre_pts_elevation$dem[nrow(poudre_pts_elevation)])\n\nslope &lt;- elevation_change / river_length\nprint(slope)\n\nNA [1/m]\n\n\n#11\n\nlibrary(ggplot2)\n\nggplot(poudre_pts_elevation, aes(x = ID, y = dem)) +\n  geom_line() +\n  labs(title = \"Elevation Profile of the Cache la Poudre River\",\n       x = \"Point ID\",\n       y = \"Elevation (cm)\") +\n  theme_minimal()\n\nWarning: Removed 3930 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n#12\n\nggplot() +\n  geom_sf(data = poudre_pts_elevation, aes(color = dem)) +\n  scale_color_viridis_c() +\n  labs(title = \"Spatial Map of Cache la Poudre River by Elevation\",\n       color = \"Elevation (cm)\") +\n  theme_minimal()"
  }
]